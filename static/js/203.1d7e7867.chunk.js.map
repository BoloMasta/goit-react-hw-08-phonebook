{"version":3,"file":"static/js/203.1d7e7867.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.scss?6b75","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.scss?573d","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/StatusBar/StatusBar.module.scss?38fb","components/StatusBar/StatusBar.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.scss?430e","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.scss?e0bd","components/Notification/Notification.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.inputValue;\n\nexport const selectFavouriteOnly = state => state.filter.favouriteOnly;\n\nexport const selectSortedAlphabetically = state => state.filter.sortedAlphabetically;\n\nexport const selectContactsCount = createSelector([selectContacts], contacts => {\n  return contacts.reduce(\n    (count, contact) => {\n      if (contact.favourite) {\n        count.favourite++;\n      }\n      count.total++;\n      return count;\n    },\n    { total: 0, favourite: 0 }\n  );\n});\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFavouriteOnly],\n  (contacts, favouriteOnly) => {\n    return favouriteOnly ? contacts.filter(contact => contact.favourite) : contacts;\n  }\n);\n\nexport const selectFilteredContacts = createSelector(\n  [selectVisibleContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__zqkUM\",\"inputs\":\"ContactForm_inputs__hssU9\",\"label\":\"ContactForm_label__eteY1\",\"button\":\"ContactForm_button__x3ZRx\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.scss';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const isContactExist = contacts.find(\n      contact => contact.name.toLowerCase() === event.target.elements.name.value.toLowerCase()\n    );\n    const isPhoneExist = contacts.find(\n      contact => contact.number === event.target.elements.number.value\n    );\n\n    if (isContactExist) {\n      alert(`User ${event.target.elements.name.value} is already in contacts`);\n      return;\n    }\n    if (isPhoneExist) {\n      alert(`Number ${event.target.elements.number.value} is already in contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: event.target.elements.name.value,\n        number: event.target.elements.number.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.inputs}>\n        <TextField\n          label=\"Name\"\n          variant=\"standard\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <TextField\n          label=\"Phone\"\n          variant=\"standard\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          maxLength={15}\n          required\n        />\n        {/* <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={css.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            maxLength={15}\n            required\n          />\n        </label> */}\n      </div>\n\n      {/* <button className={css.button} type=\"submit\">\n        Add contact\n      </button> */}\n\n      <Button variant=\"contained\" endIcon={<AddCircleOutlineIcon />} type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__CLSp2\",\"input\":\"Filter_input__S09D5\",\"button\":\"Filter_button__8nRYk\",\"icon\":\"Filter_icon__S8e4o\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from '../../redux/contacts/filterSlice';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.scss';\nimport clearIcon from '../../images/backspace.png';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = event => {\n    dispatch(setContactsFilter(event.target.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contact by name:\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChangeFilter}\n        value={useSelector(selectFilter)}\n        disabled={useSelector(selectContacts).length === 0}\n      />\n      {useSelector(selectFilter) && (\n        <button\n          className={css.button}\n          type=\"button\"\n          onClick={() => dispatch(setContactsFilter(''))}\n        >\n          <img src={clearIcon} alt=\"clear icon\" className={css.icon} />\n        </button>\n      )}\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"StatusBar\":\"StatusBar_StatusBar__T0Gl3\",\"infoSection\":\"StatusBar_infoSection__2u4+E\",\"counter\":\"StatusBar_counter__0aSEO\",\"counter__data\":\"StatusBar_counter__data__q+Fg7\",\"buttons\":\"StatusBar_buttons__S2sFw\",\"button_sort\":\"StatusBar_button_sort__vvMYA\",\"icon\":\"StatusBar_icon__KRQzH\",\"likeButton\":\"StatusBar_likeButton__b1I51\",\"liked\":\"StatusBar_liked__BnRQ3\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsCount } from '../../redux/contacts/selectors';\nimport { sortContactsAz, sortContactsAzReverse } from '../../redux/contacts/contactsSlice';\n//import { setFavouriteOnly } from '../../redux/contacts/filterSlice';\nimport { Filter } from '../Filter/Filter';\nimport css from './StatusBar.module.scss';\n// import sortIcon from '../../images/sort.png';\n//import sortAzIcon from '../../images/sortaz.png';\nimport IconButton from '@mui/material/IconButton';\nimport SortByAlphaIcon from '@mui/icons-material/SortByAlpha';\n\nexport const StatusBar = () => {\n  const [sorted, setSorted] = useState({ sortedAlphabetically: false, sortedByDate: false });\n  const dispatch = useDispatch();\n  // const favouriteOnly = useSelector(selectFavouriteOnly);\n  const { total } = useSelector(selectContactsCount);\n\n  const handleSortAzContacts = () => {\n    if (sorted.sortedAlphabetically) {\n      dispatch(sortContactsAzReverse());\n      setSorted({ sortedAlphabetically: false, sortedByDate: false });\n    } else {\n      dispatch(sortContactsAz());\n      setSorted({ sortedAlphabetically: true, sortedByDate: false });\n    }\n  };\n\n  // const handleSortDateContacts = () => {\n  //   if (sorted.sortedByDate) {\n  //     dispatch(sortContactsByDateReverse());\n  //     setSorted({ sortedAlphabetically: false, sortedByDate: false });\n  //   } else {\n  //     dispatch(sortContactsByDate());\n  //     setSorted({ sortedAlphabetically: false, sortedByDate: true });\n  //   }\n  // };\n\n  // const addLike = event => {\n  //   event.target.classList.toggle(css.liked);\n  //   dispatch(setFavouriteOnly());\n  // };\n\n  return (\n    <div className={css.StatusBar}>\n      <div className={css.infoSection}>\n        <div className={css.counter}>\n          <p className={css.counter__data}>\n            You have {total} {total === 1 ? 'contact' : 'contacts'}\n            {/* {' ( ' + favourite + ' ♥ )'} */}\n          </p>\n        </div>\n        {total > 0 && (\n          <>\n            {/* <button\n              className={css.likeButton}\n              title={favouriteOnly ? 'Show all contacts' : 'Show only favourite contacts'}\n              onClick={addLike}\n            ></button> */}\n            {/* <button\n              className={css.button_sort}\n              type=\"button\"\n              title={sorted.sortedAlphabetically ? 'Sort by name Z-A' : 'Sort by name A-Z'}\n              onClick={handleSortAzContacts}\n            >\n              <img src={sortAzIcon} alt=\"sort AZ icon\" className={css.icon} />\n            </button> */}\n\n            <IconButton\n              onClick={handleSortAzContacts}\n              title={sorted.sortedAlphabetically ? 'Sort by name Z-A' : 'Sort by name A-Z'}\n            >\n              <SortByAlphaIcon size=\"large\" sx={{ height: 35, width: 35 }} />\n            </IconButton>\n\n            {/* <button\n              className={css.button_sort}\n              type=\"button\"\n              X\n              title={sorted.sortedByDate ? 'Sort by date added reverse' : 'Sort by date added'}\n              onClick={handleSortDateContacts}\n            >\n              <img src={sortIcon} alt=\"sort date icon\" className={css.icon} />\n            </button> */}\n          </>\n        )}\n      </div>\n      <Filter />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__JS8ki\",\"loading\":\"ContactListItem_loading__x-8Bc\",\"user_icon\":\"ContactListItem_user_icon__ObDxq\",\"telephone_icon\":\"ContactListItem_telephone_icon__qGol4\",\"text\":\"ContactListItem_text__Gk2W8\",\"button\":\"ContactListItem_button__e41Ex\",\"item_icons\":\"ContactListItem_item_icons__7jkZV\",\"likeButton\":\"ContactListItem_likeButton__TQUFa\",\"liked\":\"ContactListItem_liked__J5QA+\"};","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n//import Button from '@mui/material/Button';\n//import DeleteIcon from '@mui/icons-material/Delete';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport css from './ContactListItem.module.scss';\n//import userIcon from '../../images/user.png';\n//import telephoneIcon from '../../images/telephone.png';\n\nimport Typography from '@mui/material/Typography';\n\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport PersonIcon from '@mui/icons-material/Person';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CallIcon from '@mui/icons-material/Call';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  // const addLike = () => {\n  //   dispatch(toogleFavourite(contact));\n  // };\n\n  return (\n    <ListItem className={clsx(css.item, isLoading && css.loading)}>\n      {/* <div className={css.item_icons}>\n        <img src={userIcon} alt=\"user icon\" className={css.user_icon} />\n        {/* <button\n          className={clsx(css.likeButton, contact.favourite && css.liked)}\n          title={contact.favourite ? 'Remove from favourites' : 'Add to favourites'}\n          onClick={addLike}\n        ></button> */}\n      {/* </div> */}\n\n      <PersonIcon sx={{ marginRight: 4 }} />\n\n      <Typography variant=\"h6\">\n        {contact.name}: {contact.number}\n      </Typography>\n      <IconButton href={`tel:${contact.number}`}>\n        <CallIcon />\n      </IconButton>\n      {/* <p className={css.text}>\n        {contact.name}: {contact.number}\n        <a href={`tel:${contact.number}`}>\n          <img\n            src={telephoneIcon}\n            alt=\"telephone icon\"\n            title=\"Call to\"\n            className={css.telephone_icon}\n          />\n        </a>\n      </p> */}\n      {/* <button className={css.button} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button> */}\n      <IconButton onClick={handleDelete} sx={{ marginLeft: 'auto' }}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    phone: PropTypes.string,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Notification_message__gGjgL\"};","import PropTypes from 'prop-types';\nimport css from './Notification.module.scss';\n\nexport const Notification = ({ message }) => <p className={css.message}>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lJuMM\"};","import { useSelector } from 'react-redux';\nimport { FadeLoader } from 'react-spinners';\n\nimport List from '@mui/material/List';\n\nimport {\n  selectIsLoading,\n  selectFilteredContacts,\n  selectFilter,\n  selectFavouriteOnly,\n  selectContactsCount,\n} from 'redux/contacts/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { Notification } from 'components/Notification/Notification';\nimport css from './ContactList.module.scss';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const contactsCount = useSelector(selectContactsCount);\n  const filter = useSelector(selectFilter);\n  const favouriteOnly = useSelector(selectFavouriteOnly);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List className={css.list}>\n      {isLoading && (\n        <FadeLoader\n          color=\"#3f51b5\"\n          cssOverride={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            height: 20,\n            width: 0,\n            transform: 'translate(-50%, -50%)',\n          }}\n        />\n      )}\n      {!isLoading && contactsCount.total === 0 && <Notification message=\"No contacts yet\" />}\n      {filteredContacts.map(({ id, name, number, favourite }) => (\n        <ContactListItem key={id} contact={{ id, name, number, favourite }} />\n      ))}\n      {filteredContacts.length === 0 && (filter !== '' || favouriteOnly) && (\n        <Notification message=\"No contacts found\" />\n      )}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { StatusBar } from '../components/StatusBar/StatusBar';\nimport { ContactList } from '../components/ContactList/ContactList';\n// import { Notification } from './Notification/Notification';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <StatusBar />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","inputValue","selectFavouriteOnly","favouriteOnly","selectContactsCount","createSelector","reduce","count","contact","favourite","total","selectVisibleContacts","selectFilteredContacts","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","className","css","onSubmit","event","preventDefault","form","target","isContactExist","find","elements","value","isPhoneExist","number","alert","addContact","reset","TextField","label","variant","pattern","title","required","type","maxLength","Button","endIcon","AddCircleOutline","Filter","onChange","setContactsFilter","disabled","length","onClick","src","clearIcon","alt","StatusBar","useState","sortedAlphabetically","sortedByDate","sorted","setSorted","IconButton","sortContactsAzReverse","sortContactsAz","SortByAlpha","size","sx","height","width","ContactListItem","ListItem","clsx","Person","marginRight","Typography","href","Call","deleteContact","id","marginLeft","Delete","Notification","message","ContactList","contactsCount","filteredContacts","List","FadeLoader","color","cssOverride","position","top","left","transform","map","useEffect","fetchContacts"],"sourceRoot":""}