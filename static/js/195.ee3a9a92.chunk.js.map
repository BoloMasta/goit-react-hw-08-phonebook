{"version":3,"file":"static/js/195.ee3a9a92.chunk.js","mappings":"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","sources":["components/Notification/Notification.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.scss?6b75","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.scss?573d","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/StatusBar/StatusBar.module.scss?38fb","components/StatusBar/StatusBar.jsx","webpack://react-homework-template/./src/components/ContactEdit/ContactEdit.module.scss?57ee","components/ContactEdit/ContactEdit.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.scss?430e","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\n\nexport const Notification = ({ message }) => (\n  <Typography variant=\"h6\" style={{ textAlign: 'center' }}>\n    {message}\n  </Typography>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.inputValue;\n\nexport const selectSortedAlphabetically = state => state.filter.sortedAlphabetically;\n\nexport const selectContactsCount = createSelector([selectContacts], contacts => {\n  return contacts.length;\n});\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__zqkUM\",\"submitButton\":\"ContactForm_submitButton__KmKm9\",\"backspaceIconName\":\"ContactForm_backspaceIconName__iOxBO\",\"backspaceIconPhone\":\"ContactForm_backspaceIconPhone__1owlv\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MuiTelInput, matchIsValidTel } from 'mui-tel-input';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.scss';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleNameChange = newName => {\n    setName(newName);\n  };\n\n  const handlePhoneChange = newPhone => {\n    setPhone(newPhone);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isContactExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isPhoneExist = contacts.find(\n      contact => contact.number.replace(/[^0-9]+/g, '') === phone.replace(/[^0-9]+/g, '')\n    );\n    if (isContactExist) {\n      alert(`User ${name} is already in contacts`);\n      return;\n    }\n    if (isPhoneExist) {\n      alert(`Number ${phone} is already in contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name,\n        number: phone,\n      })\n    );\n\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <TextField\n        label=\"Name\"\n        variant=\"standard\"\n        name=\"name\"\n        fullWidth\n        // margin=\"normal\"\n        placeholder=\"Enter name\"\n        required\n        inputProps={{ maxLength: 30 }}\n        value={name}\n        onChange={event => handleNameChange(event.target.value)}\n      />\n      <BackspaceIcon\n        className={css.backspaceIconName}\n        onClick={() => setName('')}\n        style={{ display: name.length > 0 ? 'block' : 'none' }}\n      />\n\n      <MuiTelInput\n        label=\"Phone\"\n        variant=\"standard\"\n        name=\"number\"\n        fullWidth\n        margin=\"normal\"\n        placeholder=\"Enter phone number\"\n        required\n        value={phone}\n        onChange={handlePhoneChange}\n        error={phone.length > 0 && matchIsValidTel(phone) === false}\n        inputProps={{ maxLength: 20 }}\n      />\n      <BackspaceIcon\n        className={css.backspaceIconPhone}\n        onClick={() => setPhone('')}\n        style={{ display: phone.length > 0 ? 'block' : 'none' }}\n      />\n\n      <Button\n        variant=\"contained\"\n        endIcon={<AddCircleOutlineIcon />}\n        className={css.submitButton}\n        type=\"submit\"\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__asygT\",\"input\":\"Filter_input__S09D5\",\"backspaceIcon\":\"Filter_backspaceIcon__fFTTj\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from '../../redux/contacts/filterSlice';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport Tooltip from '@mui/material/Tooltip';\nimport css from './Filter.module.scss';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = event => {\n    dispatch(setContactsFilter(event.target.value));\n  };\n\n  return (\n    <Box className={css.filter}>\n      <Input\n        placeholder=\"Filter\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChangeFilter}\n        value={useSelector(selectFilter)}\n        disabled={useSelector(selectContacts).length < 2}\n        className={css.input}\n      />\n\n      {useSelector(selectFilter) && (\n        <Tooltip title=\"Clear filter\" placement=\"bottom\" arrow>\n          <BackspaceIcon\n            className={css.backspaceIcon}\n            onClick={() => dispatch(setContactsFilter(''))}\n          />\n        </Tooltip>\n      )}\n    </Box>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"StatusBar\":\"StatusBar_StatusBar__T0Gl3\",\"counter\":\"StatusBar_counter__0aSEO\",\"sortIcon\":\"StatusBar_sortIcon__7x8IR\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsCount } from '../../redux/contacts/selectors';\nimport { sortContactsAz, sortContactsAzReverse } from '../../redux/contacts/contactsSlice';\nimport { Filter } from '../Filter/Filter';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport PersonIcon from '@mui/icons-material/Person';\nimport SortByAlphaIcon from '@mui/icons-material/SortByAlpha';\nimport Tooltip from '@mui/material/Tooltip';\nimport css from './StatusBar.module.scss';\n\nexport const StatusBar = () => {\n  const [sorted, setSorted] = useState({ sortedAlphabetically: false, sortedByDate: false });\n  const dispatch = useDispatch();\n  const total = useSelector(selectContactsCount);\n\n  const handleSortAzContacts = () => {\n    if (sorted.sortedAlphabetically) {\n      dispatch(sortContactsAzReverse());\n      setSorted({ sortedAlphabetically: false, sortedByDate: false });\n    } else {\n      dispatch(sortContactsAz());\n      setSorted({ sortedAlphabetically: true, sortedByDate: false });\n    }\n  };\n\n  return (\n    <Box className={css.StatusBar}>\n      <Tooltip title=\"number of your contacts\" placement=\"bottom-start\" arrow>\n        <Box className={css.counter}>\n          <PersonIcon sx={{ marginRight: 1 }} />\n          <Typography variant=\"h6\" sx={{ textAlign: 'center' }}>\n            {total}\n          </Typography>\n        </Box>\n      </Tooltip>\n      <Filter />\n\n      <Tooltip\n        title={sorted.sortedAlphabetically ? 'Sort by name Z-A' : 'Sort by name A-Z'}\n        placement=\"bottom-start\"\n        arrow\n      >\n        <span>\n          <IconButton onClick={handleSortAzContacts} disabled={total < 2}>\n            <SortByAlphaIcon size=\"large\" className={css.sortIcon} />\n          </IconButton>\n        </span>\n      </Tooltip>\n    </Box>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEdit_form__bv69N\",\"buttons\":\"ContactEdit_buttons__5e27H\",\"backspaceIconName\":\"ContactEdit_backspaceIconName__z95l8\",\"backspaceIconPhone\":\"ContactEdit_backspaceIconPhone__uqc54\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport css from './ContactEdit.module.scss';\n\nexport const ContactEdit = ({ contact, handleClose }) => {\n  const [name, setName] = useState(contact.name);\n  const [phone, setPhone] = useState(contact.number);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleNumberChange = event => {\n    setPhone(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contactsWithoutCurrent = contacts.filter(item => item.id !== contact.id);\n\n    const isContactExist = contactsWithoutCurrent.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isPhoneExist = contactsWithoutCurrent.find(\n      contact => contact.number.replace(/[^0-9]+/g, '') === phone.replace(/[^0-9]+/g, '')\n    );\n    if (isContactExist) {\n      alert(`User ${name} is already in contacts`);\n      return;\n    }\n    if (isPhoneExist) {\n      alert(`Number ${phone} is already in contacts`);\n      return;\n    }\n\n    dispatch(\n      editContact({\n        id: contact.id,\n        name,\n        number: phone,\n      })\n    );\n    handleClose();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <Typography variant=\"h6\" component=\"h1\">\n        Type new data for this contact\n      </Typography>\n      <Typography variant=\"subtitle1\" component=\"h2\">\n        {contact.name}: {contact.number}\n      </Typography>\n\n      <TextField\n        label=\"Name\"\n        variant=\"standard\"\n        name=\"name\"\n        fullWidth\n        margin=\"normal\"\n        value={name}\n        onChange={handleNameChange}\n        required\n      />\n      <BackspaceIcon\n        className={css.backspaceIconName}\n        onClick={() => setName('')}\n        style={{ display: name.length > 0 ? 'block' : 'none' }}\n      />\n      <TextField\n        label=\"Number\"\n        variant=\"standard\"\n        name=\"number\"\n        fullWidth\n        margin=\"normal\"\n        value={phone}\n        onChange={handleNumberChange}\n        required\n      />\n      <BackspaceIcon\n        className={css.backspaceIconPhone}\n        onClick={() => setPhone('')}\n        style={{ display: phone.length > 0 ? 'block' : 'none' }}\n      />\n\n      <Box className={css.buttons}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save changes\n          <SaveIcon sx={{ ml: 2 }} />\n        </Button>\n        <Button type=\"button\" variant=\"contained\" color=\"secondary\" onClick={handleClose}>\n          Cancel\n          <CancelIcon sx={{ ml: 2 }} />\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nContactEdit.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }),\n  handleClose: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ContactListItem_modal__7e6HV\",\"item\":\"ContactListItem_item__JS8ki\",\"loading\":\"ContactListItem_loading__x-8Bc\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactEdit } from 'components/ContactEdit/ContactEdit';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport PersonIcon from '@mui/icons-material/Person';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CallIcon from '@mui/icons-material/Call';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Tooltip from '@mui/material/Tooltip';\nimport css from './ContactListItem.module.scss';\n\nexport const ContactListItem = ({ contact }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n  const handleOpen = () => {\n    setIsModalOpen(true);\n  };\n  const handleClose = () => setIsModalOpen(false);\n\n  return (\n    <>\n      <Modal\n        open={isModalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        disableScrollLock={true}\n      >\n        <Box className={css.modal}>\n          <ContactEdit contact={contact} handleClose={handleClose} />\n        </Box>\n      </Modal>\n\n      <ListItem className={clsx(css.item, isLoading && css.loading)}>\n        <PersonIcon sx={{ marginRight: 1 }} />\n        <Typography variant=\"subtitle1\">\n          {contact.name}: {contact.number}\n        </Typography>\n        <Tooltip title=\"Call to\" placement=\"bottom-start\" arrow>\n          <IconButton href={`tel:${contact.number}`}>\n            <CallIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Edit\" placement=\"bottom-start\" arrow>\n          <IconButton onClick={handleOpen} sx={{ marginLeft: 'auto' }}>\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Delete\" placement=\"bottom-start\" arrow>\n          <IconButton onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    phone: PropTypes.string,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lJuMM\",\"loader\":\"ContactList_loader__eRJ1r\"};","import { useSelector } from 'react-redux';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport {\n  selectIsLoading,\n  selectFilteredContacts,\n  selectFilter,\n  selectContactsCount,\n} from 'redux/contacts/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { Notification } from 'components/Notification/Notification';\nimport css from './ContactList.module.scss';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const contactsCount = useSelector(selectContactsCount);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List className={css.list}>\n      {isLoading && <CircularProgress className={css.loader} />}\n      {!isLoading && contactsCount === 0 && <Notification message=\"No contacts yet\" />}\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} contact={{ id, name, number }} />\n      ))}\n      {filteredContacts.length === 0 && filter !== '' && (\n        <Notification message=\"No contacts found\" />\n      )}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { StatusBar } from '../components/StatusBar/StatusBar';\nimport { ContactList } from '../components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <StatusBar />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Notification","message","variant","style","textAlign","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","inputValue","selectContactsCount","createSelector","length","selectFilteredContacts","contact","name","toLowerCase","includes","ContactForm","useState","setName","phone","setPhone","useSelector","dispatch","useDispatch","className","css","onSubmit","event","preventDefault","isContactExist","find","isPhoneExist","number","replace","alert","addContact","TextField","label","fullWidth","placeholder","required","inputProps","maxLength","value","onChange","newName","target","Backspace","onClick","display","margin","newPhone","error","matchIsValidTel","Button","endIcon","AddCircleOutline","type","Filter","Box","Input","setContactsFilter","disabled","Tooltip","title","placement","arrow","StatusBar","sortedAlphabetically","sortedByDate","sorted","setSorted","total","Person","sx","marginRight","Typography","IconButton","sortContactsAzReverse","sortContactsAz","SortByAlpha","size","ContactEdit","handleClose","contactsWithoutCurrent","item","id","editContact","component","color","Save","ml","Cancel","ContactListItem","isModalOpen","setIsModalOpen","Modal","open","onClose","disableScrollLock","ListItem","clsx","href","Call","marginLeft","Edit","deleteContact","Delete","ContactList","contactsCount","filteredContacts","List","CircularProgress","map","useEffect","fetchContacts"],"sourceRoot":""}